import pygame as pg
import random

pg.init()
screen_width = 1280
screen_height = 720
screen = pg.display.set_mode((screen_width, screen_height))
running = True
clock = pg.time.Clock()
x = screen_width / 2
y = 570
listacores = [[255, 0, 0], [0, 0, 255], [255, 255, 0], [255, 90, 0], [128, 0, 128]]
pontos = 0
fonte = pg.font.SysFont(None, 40, True)
fonte1 = pg.font.SysFont(None, 40, True)
tempo = 300

fruits = []  # Lista para armazenar as frutas (cada uma é um dicionário com 'x', 'y', 'color' e 'speed')

def frutas():
    global fruits, player_rect, pontos
    # Atualiza a posição de cada fruta e remove se sair da tela ou colidir com o chão/jogador
    for fruit in fruits[:]:  # Usa uma cópia da lista para evitar problemas ao remover
        fruit['y'] += fruit['speed']

        # Cria um Rect para a fruta (aproximação: quadrado ao redor do círculo de raio 20)
        fruit_rect = pg.Rect(fruit['x'] - 20, fruit['y'] - 20, 40, 40)

        # Cria um Rect para o chão (mesmo que o floor desenhado)
        floor_rect = pg.Rect(0, 630, screen_width, 100)

        # Verifica colisão com o chão: remove a fruta
        if fruit_rect.colliderect(floor_rect):
            fruits.remove(fruit)
            continue  # Pula para a próxima fruta, pois esta foi removida

        # Verifica colisão com o jogador: adiciona pontos e remove a fruta
        if player_rect.colliderect(fruit_rect):
            pontos += 5
            fruits.remove(fruit)
            continue  # Pula para a próxima fruta

    # Spawna uma nova fruta se houver menos de 1
    if len(fruits) < 1:
        fruits.append({
            'x': random.randint(0, screen_width),
            'y': 0,
            'color': random.choice(listacores),
            'speed': random.randint(5, 8)
        })

    # Desenha todas as frutas
    for fruit in fruits:
        pg.draw.circle(screen, fruit['color'], (fruit['x'], fruit['y']), 20, 0)

while running:
    for event in pg.event.get():
        if event.type == pg.QUIT:
            running = False

    msg = f'Pontos: {pontos}'
    msg2 = f'Tempo: {tempo}'

    screen.fill("lightblue")

    keys = pg.key.get_pressed()

    if keys[pg.K_LEFT]:
        x -= 6
    elif keys[pg.K_RIGHT]:
        x += 6

    # Atualiza o player_rect com a nova posição de x e y
    player_rect = pg.Rect(x, y, 60, 60)

    floor = pg.draw.rect(screen, [0, 170, 0], [0, 630, screen_width, 100])

    player = pg.draw.rect(screen, [210, 105, 30], [x, y, 60, 60])

    frutas()

    texto_pontos = fonte.render(msg, True, [0, 0, 0])
    texto_tempo = fonte1.render(msg2, True, [0,0,0])
    screen.blit(texto_pontos, (10, 10))  # Adicionei blit para desenhar o texto na tela
    screen.blit(texto_tempo, (screen_width - 150, 10))

    tempo -= 0.01

    pg.display.update()

    clock.tick(60)

pg.quit()
